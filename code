#include <iostream>
#include "sqlite3.h"

int main() {
    sqlite3* db;
    char* errMsg = 0;
    int rc;

    // SQLite 데이터베이스 연결
    rc = sqlite3_open("sj.db", &db);

    if (rc) {
        std::cerr << "Can't open database: " << sqlite3_errmsg(db) << std::endl;
        return(0);
    }

    // SQL 쿼리 작성
    const char* sql = "SELECT students.name, SUM(scores.score) AS total_score, "
        "AVG(scores.score) AS average_score "
        "FROM students "
        "INNER JOIN scores ON students.id = scores.student_id "
        "GROUP BY students.name";

    // SQL 쿼리 실행
    rc = sqlite3_exec(db, sql, [](void* data, int argc, char** argv, char** azColName) -> int {
        std::cout << "Student: " << argv[0] << std::endl;
        std::cout << "Total Score: " << argv[1] << std::endl;
        std::cout << "Average Score: " << argv[2] << std::endl << std::endl;
        return 0;
        }, 0, &errMsg);

    if (rc != SQLITE_OK) {
        std::cerr << "SQL error: " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }

    // SQL 쿼리 작성 (과목별 총점 및 평균)
    const char* sql_subject = "SELECT subject, SUM(score) AS total_score, AVG(score) AS average_score "
        "FROM scores GROUP BY subject";

    // SQL 쿼리 실행 (과목별 총점 및 평균)
    rc = sqlite3_exec(db, sql_subject, [](void* data, int argc, char** argv, char** azColName) -> int {
        std::cout << "Subject: " << argv[0] << std::endl;
        std::cout << "Total Score: " << argv[1] << std::endl;
        std::cout << "Average Score: " << argv[2] << std::endl << std::endl;
        return 0;
        }, 0, &errMsg);

    if (rc != SQLITE_OK) {
        std::cerr << "SQL error: " << errMsg << std::endl;
        sqlite3_free(errMsg);
    }

    // SQLite 데이터베이스 연결 종료
    sqlite3_close(db);

    return 0;
}
